const $id=e=>document.getElementById(e),delAllNodes=e=>{for(;e.firstChild;)e.removeChild(e.lastChild)},navTabButton=document.querySelectorAll(".nav-tab"),mainContents=document.querySelectorAll(".main-content"),tabsSwitcher=(e,t,s)=>{const{id:a}=e.target.dataset;if(a){t.forEach(e=>{e.classList.remove("active")}),e.target.classList.add("active"),s.forEach(e=>{e.classList.remove("active")}),document.getElementById(a).classList.add("active")}};$id("nav-tabs").addEventListener("click",e=>tabsSwitcher(e,navTabButton,mainContents));const fillDiagramms=e=>{for(let t=20;t>=0;t--){const s=document.createElement("DIV"),a=document.createElement("DIV");s.append(a),s.setAttribute("class","d-flex jcend "),a.setAttribute("data-value",10*t),20===t&&s.insertAdjacentHTML("afterbegin",'<div class="phase-scale ">200</div>'),10===t&&s.insertAdjacentHTML("afterbegin",'<div class="phase-scale">100</div>'),7===t&&s.insertAdjacentHTML("afterbegin",'<div class="phase-scale">80</div>'),0===t&&s.insertAdjacentHTML("afterbegin",'<div class="phase-scale">0</div>'),t>10&&a.setAttribute("class"," phase phase-high "),t<=10&&t>=8&&a.setAttribute("class"," phase phase-mid"),t<8&&a.setAttribute("class"," phase phase-low"),a.innerHTML="&nbsp;",e.append(s)}},phaseDiagramms=[...document.querySelectorAll(".phase-diagramm")];phaseDiagramms.forEach(fillDiagramms);const markElemInDiagramm=(e,t)=>{[...document.querySelectorAll(".phase")].filter(t=>t.closest(e)).filter(e=>+e.dataset.value<=t&&+e.dataset.value+10>t)[0].classList.add("phase-active","blink")},oscilloViewbtn=document.getElementById("oscilloViewbtn");oscilloViewbtn.addEventListener("click",()=>{navTabButton.forEach(e=>{e.classList.remove("active")}),document.getElementById("oscillograms-tab").classList.add("active"),mainContents.forEach(e=>{e.classList.remove("active")}),document.getElementById("oscillograms").classList.add("active")});const measurmentsTabs=document.querySelector(".measurments-tabs"),measurmentTab=document.querySelectorAll(".measurment-tab"),measurmentsContent=document.querySelectorAll(".measurments-content"),measurementsAllTab=document.querySelector("#measurements-all"),measurementsSwitchTab=document.querySelector("#measurements-switch");measurmentsTabs.addEventListener("click",e=>tabsSwitcher(e,measurmentTab,measurmentsContent));const measurementsAllTableBody=$id("measurementsAllTableBody"),measurementsSwitchTableBody=$id("measurementsSwitchTableBody"),refreshMeasurmentsTableData=$id("refreshMeasurmentsTableData");[...document.querySelectorAll(".measurments-table")].forEach(e=>{e.insertAdjacentHTML("afterBegin","\n    <thead>\n      <th>№</th>\n      <th>Дата и время</th>\n      <th>Выключатель</th>\n      <th>№ сол. откл.</th>\n      <th>Износ ф.А, %</th>\n      <th>Износ ф.В, %</th>\n      <th>Износ ф.С, %</th>\n      <th>Кол-во вкл.</th>\n      <th>Кол-во откл.</th>\n      <th>Собств. вр., мс</th>\n      <th>Полное. вр., мс</th>\n      <th>Вр. дуги ф.А, мс</th>\n      <th>Вр. дуги ф.В, мс</th>\n      <th>Вр. дуги ф.С, мс</th>\n      <th>Износ за перекл. ф.А, %</th>\n      <th>Износ за перекл. ф.В, %</th>\n      <th>Износ за перекл. ф.С, %</th>\n      <th>Ток ф.А, А</th>\n      <th>Ток ф.В, А</th>\n      <th>Ток ф.С, А</th>\n    </thead>\n    ")});let measurmentsTableCurrentObj={"0201":null,"0204":null,"0205":null,"0206":null,"0207":null,"0208":null,"0209":null,"0210":null,"0211":null,"0212":null,"0213":null,"0214":null,"0215":null,"0216":null,"0217":null,"0218":null,"0219":null,"0220":null,"0221":null,"0222":null,"0223":null,"0224":null,"0225":null,"0226":null,"0227":null,"0228":null};const addRowToMeasurmentsTable=(e,t)=>{e.insertAdjacentHTML("afterbegin",`\n  <tr>\n    <td>${t["0201"]}</td> \n    <td>\n      ${t["0206"]}.${t["0205"]}.${t["0204"]}\n      ${t["0207"]}:${t["0208"]}:${t["0209"]}.${t["0210"]}\n    </td>\n    <td>${t["0211"]}</td>\n    <td>${t["0212"]}</td>\n    <td>${.01*t["0213"]}</td>\n    <td>${.01*t["0214"]}</td>\n    <td>${.01*t["0215"]}</td>\n    <td>${t["0216"]}</td>\n    <td>${t["0217"]}</td>\n    <td>${t["0218"]}</td>\n    <td>${t["0219"]}</td>\n    <td>${t["0220"]}</td>\n    <td>${t["0221"]}</td>\n    <td>${t["0222"]}</td>\n    <td>${.01*t["0223"]}</td>\n    <td>${.01*t["0224"]}</td>\n    <td>${.01*t["0225"]}</td>\n    <td>${t["0226"]}</td>\n    <td>${t["0227"]}</td>\n    <td>${t["0228"]}</td>\n  </tr>\n`)};addRowToMeasurmentsTable(measurementsAllTableBody,measurmentsTableCurrentObj);let eventsTableCurrentObj={"0301":null,"0303":null,"0304":null,"0305":null,"0306":null,"0307":null,"0308":null,"0309":null,"0310":null,"0311":null};const evtCode={1:"Рестарт программы",2:"Ошибка считывания конфигурации. Принята конфигурация по умолчанию",3:"Изменена конфигурация",4:"Неисправность внутренней FLASH-памяти",5:"Неисправность внутренней SRAM-памяти",6:"Неисправность АЦП",7:"Неисправность Ethernet",8:"Неисправность датчика температуры внутри модуля",9:"Неисправность датчика температуры ШУ ВВ",10:"Неисправность датчика температуры окружающей среды",11:"Ошибка считывания FRAM (энергонезависимых данных). Приняты данные по умолчанию",12:"Пользователем задано значение расхода коммутационного ресурса ф. А",13:"Пользователем задано значение расхода коммутационного ресурса ф. B",14:"Пользователем задано значение расхода коммутационного ресурса ф. C",15:"Пользователем задано значение количества включений",16:"Пользователем задано значение количества отключений",30:"Количество операций более порогового предупредительного значения",31:"Температура в шкафу управления больше порогового предупредительного значения",32:"Температура в шкафу управления меньше порогового предупредительного значения",33:"Температура внутри блока больше порогового предупредительного значения",34:"Температура внутри блока меньше порогового предупредительного значения",35:"Собственное время отключения более порогового предупредительного значения",36:"Полное время отключения более порогового предупредительного значения",37:"Собственное время включения более порогового предупредительного значения",38:"Время включения более порогового предупредительного значения",39:"Невыполненная команда на соленоид включения",40:"Невыполненная команда на соленоид отключения 1",41:"Невыполненная команда на соленоид отключения 2",50:"Количество операций более порогового аварийного значения",51:"Температура в шкафу управления больше порогового аварийного значения",52:"Температура в шкафу управления меньше порогового аварийного значения",53:"Отказ соленоида",54:"Неполнофазный режим работы",100:"Повторное зажигание дуги для фазы А",101:"Износ контактов более порогового предупредительного значения для фазы А",102:"Время горения дуги более порогового предупредительного значения для фазы А",151:"Износ контактов более порогового аварийного значения для фазы А",200:"Повторное зажигание дуги для фазы В",201:"Износ контактов более порогового предупредительного значения для фазы В",202:"Время горения дуги более порогового предупредительного значения для фазы В",251:"Износ контактов более порогового аварийного значения для фазы В",300:"Повторное зажигание дуги для фазы С",301:"Износ контактов более порогового предупредительного значения для фазы С",302:"Время горения дуги более порогового предупредительного значения для фазы С",351:"Износ контактов более порогового аварийного значения для фазы С",1000:"Ошибка установления связи с устройством",1050:"Связь с устройством установлена",17:"Пользователем сброшены аварии и тревоги",18:"Пользователем установлена сигнализация",19:"Пользователем сброшена сигнализация"},addCurrentEntryToEventsTable=()=>{const e=document.querySelector("#eventsTableBody"),t=eventsTableCurrentObj;e.insertAdjacentHTML("beforeend",`\n  <tr>\n    <td>${t["0301"]}</td>\n    <td>\n      ${t["0305"]}.${t["0304"]}.${t["0303"]}\n      ${t["0306"]}:${t["0307"]}:${t["0308"]}.${t["0309"]}\n      </td>\n    </td>\n    <td>${null===t["0310"]?t["0310"]+" (пришло)":t["0310"]+" (ушло)"}</td>\n    <td>${t["0311"]}</td>\n    <td>${evtCode[t["0311"]]}</td>\n  </tr>`)},oscillogramsTabs=document.querySelector(".oscillograms-tabs"),oscillogramTab=document.querySelectorAll(".oscillograms-tab"),oscillogramsContent=document.querySelectorAll(".oscillograms-content");oscillogramsTabs.addEventListener("click",e=>tabsSwitcher(e,oscillogramTab,oscillogramsContent));const addOptToOscilloSelect=e=>{let t=document.createElement("option");const s=t=>Object.values(e.info[t]);let a=`${1==+s(0)?"ВКЛ":"ОТКЛ"} ${s(4)}.${s(3)}.${s(2)} ${s(5)}:${s(6)}:${s(7)}.${s(8)}.${s(9)}`;t.value=s(1),t.innerHTML=a,$id("jsOsSelect").appendChild(t)};class Chart{constructor(e,t){this.cnv=$id(e.canvasId),this.ctx=this.cnv.getContext("2d"),this.data=t,this.rangeY=this.calcSourceMinMax("Y",this.data.a.values,this.data.b.values,this.data.c.values),this.rangeX=this.calcSourceMinMax("X",this.data.a.values,this.data.b.values,this.data.c.values),this.width=this.cnv.width,this.height=this.cnv.height,this.padding={x:60,y:60},this.dotRadius=2,this.left=this.padding.x,this.right=this.width-this.padding.x,this.top=this.padding.y,this.bottom=this.height-this.padding.y,this.bk=!0,this.phClrs={a:"red",b:"blue",c:"green"},this.dotsCheck=$id(e.dotsCheck),this.dotsValCheck=$id(e.dotsValCheck),this.phRegim=$id(e.phRegim)}mapRange(e,t,s,a,n){return a+(n-a)*(e-t)/(s-t)}calcSourceMinMax(e,...t){let s=1/0,a=-1/0;return t.forEach(t=>{for(let n=0;n<t.length;n++){const i=t[n][e];i<s&&(s=i),i>a&&(a=i)}}),{min:s,max:a}}getDisplayXY(e,t){return{displayX:this.mapRange(e,this.rangeX.min,this.rangeX.max,this.left,this.right),displayY:this.mapRange(t,this.rangeY.min,this.rangeY.max,this.bottom,this.top)}}roundToMultiple(e,t){return Math.round(e/t)*t}connector(e,t,s){const{ctx:a}=this;a.beginPath(),a.lineWidth=2,a.moveTo(e.displayX,e.displayY),a.lineTo(t.displayX,t.displayY),a.strokeStyle=s,a.stroke()}dot(e){const{ctx:t}=this;t.beginPath(),t.moveTo(e.displayX,e.displayY),t.arc(e.displayX,e.displayY,this.dotRadius,0,2*Math.PI),t.closePath(),t.fill()}drawAxes(){const{ctx:e,left:t,right:s,top:a,bottom:n}=this;e.beginPath(),e.moveTo(t,a),e.lineTo(t,n),e.moveTo(t,n),e.lineTo(s,n),e.strokeStyle="gray",e.stroke()}drawDashedLine(e,t,s,a){const{ctx:n}=this;n.beginPath(),n.setLineDash([8,4]),n.moveTo(e,s),n.lineTo(t,a),n.stroke()}drawLine(e,t,s,a){const{ctx:n}=this;n.beginPath(),n.setLineDash([]),n.moveTo(e,s),n.lineTo(t,a),n.stroke()}drawScaleGrid(e,t,s){const{ctx:a,left:n,right:i}=this;for(let l=e;l>t;l-=s){let e=this.roundToMultiple(l,1e3),t=this.getDisplayXY(n-10,e).displayY;a.fillText(new Intl.NumberFormat("ru-RU").format(e),n-10,t),0===l?this.drawLine(n,i,t,t):this.drawDashedLine(n,i,t,t)}}drawYScale(){const{ctx:e,left:t,right:s}=this,a=this.roundToMultiple(this.rangeY.max,10)/5,n=this.roundToMultiple(Math.abs(this.rangeY.min),10)/5;e.textAlign="right",e.textBaseline="middle";const i=this.getDisplayXY(t-10,0).displayY;this.drawScaleGrid(this.rangeY.max,0,a),this.rangeY.min<0&&this.drawScaleGrid(0,this.rangeY.min,n),e.fillText(new Intl.NumberFormat("ru-RU").format(this.rangeY.min),t-10,this.bottom),e.setLineDash([]),this.drawLine(t,s,i,i)}drawXScale(){const{cnv:e,ctx:t,bottom:s,top:a}=this;let n;if(t.textAlign="center",e===$id("osCnv"))for(let e=this.rangeX.min;e<=this.rangeX.max;e++)e/5%1==0&&(n=this.getDisplayXY(e,s+10).displayX,t.fillText(e/5,n,s+10)),0!==e&&this.drawDashedLine(n,n,s,a);else for(let e=this.rangeX.min;e<=this.rangeX.max;e++)n=this.getDisplayXY(e,s+10).displayX,t.fillText(e,n,s+10),0!==e&&this.drawDashedLine(n,n,s,a);t.setLineDash([])}drawContent(e,t,s=1){const{ctx:a}=this;let n=this.getDisplayXY(e.values[0].X,e.values[0].Y*s);a.setLineDash([]),this.dotsCheck.checked&&this.dot(n);for(let i=1;i<=e.values.length-1;i++){const l=this.getDisplayXY(e.values[i].X,e.values[i].Y*s);this.dotsValCheck.checked&&a.fillText(e.values[i-1].Y,n.displayX,n.displayY-5),this.connector(n,l,t),this.dotsCheck.checked&&this.dot(l),n=l}this.dotsValCheck.checked&&a.fillText(e.values[e.values.length-1].Y,n.displayX-5,n.displayY-5)}clearCanvas(){const{ctx:e}=this;e.clearRect(0,0,this.width,this.height)}drawCanvas(){const{ctx:e}=this;this.clearCanvas(),e.lineWidth=1,this.drawAxes(),this.drawXScale(),this.drawYScale()}initRndr(){const{data:e}=this;this.rangeY=this.calcSourceMinMax("Y",e.a.values,e.b.values,e.c.values),this.rangeX=this.calcSourceMinMax("X",e.a.values,e.b.values,e.c.values),this.phRegim.value="all",this.drawCanvas(),this.drawContent(e.a,"red"),this.drawContent(e.b,"blue"),this.drawContent(e.c,"green"),this.bk&&this.drawContent(e.bk,"purple",this.rangeY.max/2)}choosePhRegim(e,t){const{data:s}=this;this.rangeY=this.calcSourceMinMax("Y",s[e].values),this.rangeX=this.calcSourceMinMax("X",s[e].values),this.drawCanvas(),this.drawContent(s[e],t)}chooseOsciloCanvasRegim(e){switch(e){case"all":this.initRndr();break;default:this.choosePhRegim(e,this.phClrs[e]),this.bk&&this.drawContent(this.data.bk,"purple",this.rangeY.max/2)}}eventsListen(){this.dotsCheck.addEventListener("change",()=>{this.drawCanvas(),this.chooseOsciloCanvasRegim(this.phRegim.value)}),this.dotsValCheck.addEventListener("change",()=>{this.drawCanvas(),this.chooseOsciloCanvasRegim(this.phRegim.value)}),this.phRegim.addEventListener("change",()=>{this.drawCanvas(),this.chooseOsciloCanvasRegim(this.phRegim.value)})}}let osData=[{info:[{f:1},{1:0},{2:2022},{3:11},{4:2},{5:16},{6:20},{7:1},{8:999},{9:0}],a:{values:[{X:0,Y:12e3},{X:1,Y:0}]},b:{values:[{X:0,Y:3e3},{X:1,Y:-11500}]},c:{values:[{X:0,Y:1e4},{X:1,Y:-11e3}]},bk:{values:[{X:0,Y:1},{X:1,Y:1}]}},{info:[{f:0},{1:1},{2:3033},{3:33},{4:"33"},{5:16},{6:20},{7:1},{8:999},{9:0}],a:{values:[{X:0,Y:16e3},{X:1,Y:0}]},b:{values:[{X:0,Y:-3e3},{X:1,Y:-1e3}]},c:{values:[{X:0,Y:-4e3},{X:1,Y:-1e3}]},bk:{values:[{X:0,Y:1},{X:1,Y:1}]}}],osChrt=new Chart({canvasId:"osCnv",dotsCheck:"osCnvDots",dotsValCheck:"osCnvDotsVal",phRegim:"osCnvPh"},osData[0]);osChrt.eventsListen();const addRowsToOscilorgamsTableBody=e=>{for(let t=e.a.values[0].X;t<e.a.values.length;t++)$id("oscilorgamsTableBody").insertAdjacentHTML("beforeend",`\n    <tr>\n      <td>${t}</td>     \n      <td>${e.bk.values[t]?e.bk.values[t].Y:"-"}</td>\n      <td>${e.a.values[t].Y}</td>\n      <td>${e.b.values[t]?e.b.values[t].Y:"-"}</td>\n      <td>${e.c.values[t]?e.c.values[t].Y:"-"}</td>\n    </tr>\n    `)};$id("jsOsSelect").addEventListener("click",e=>{const t=e.target.value;osChrt.data=osData[t],delAllNodes($id("oscilorgamsTableBody")),addRowsToOscilorgamsTableBody(osData[t]),osChrt.initRndr()});const refreshOsData=e=>{delAllNodes($id("jsOsSelect")),e.forEach(e=>addOptToOscilloSelect(e))};refreshOsData(osData);let trData=[{a:{values:[{X:0,Y:14e4},{X:1,Y:0},{X:3,Y:28e3}],dates:["11.11.1111 01:01:01.1111","22.22.2222 02:02:02.2222","33.33.3333 03:03:03.3333","44.44.4444 44:44:44.4444"]},b:{values:[{X:0,Y:12e4},{X:1,Y:0},{X:2,Y:-2e4},{X:3,Y:28e3}]},c:{values:[{X:0,Y:1e4},{X:1,Y:0},{X:2,Y:-2e4},{X:3,Y:28e3}]}},{a:{values:[{X:0,Y:14e4},{X:1,Y:0},{X:3,Y:28e3}],dates:["11.11.1111 01:01:01.1111","22.22.2222 02:02:02.2222","33.33.3333 03:03:03.3333","44.44.4444 44:44:44.4444"]},b:{values:[{X:0,Y:12e4},{X:1,Y:0},{X:2,Y:-2e4},{X:3,Y:28e3}]},c:{values:[{X:0,Y:1e4},{X:1,Y:0},{X:2,Y:-2e4},{X:3,Y:28e3}]}}];const trChrt=new Chart({canvasId:"trndsCnv",dotsCheck:"trCnvDts",dotsValCheck:"trCnvDtsVal",phRegim:"trPhses"},trData[1]);trChrt.bk=!1,trChrt.initRndr(),trChrt.eventsListen();const cnfTabs=document.querySelector(".cnf-tabs"),cnfTab=document.querySelectorAll(".cnf-tab"),cnfContent=document.querySelectorAll(".cnf-content");function addZero(e){return e<10&&(e="0"+e),e}function pcTime(){const e=new Date;return{day:addZero(e.getDate()),month:addZero(e.getMonth()+1),year:e.getFullYear(),hours:addZero(e.getHours()),minutes:addZero(e.getMinutes()),seconds:addZero(e.getSeconds())}}cnfTabs.addEventListener("click",e=>tabsSwitcher(e,cnfTab,cnfContent)),setInterval(()=>{$id("current_date_time_block").innerHTML=`\n  ${pcTime().day}.${pcTime().month}.${pcTime().year}\n  ${pcTime().hours}:${pcTime().minutes}:${pcTime().seconds}`},1e3);const setHadleTimeInput=()=>{$id("handleDay").value=pcTime().day,$id("handleMounth").value=pcTime().month,$id("handleYear").value=pcTime().year,$id("handleHour").value=pcTime().hours,$id("handleMin").value=pcTime().minutes};setHadleTimeInput(),setInterval(()=>setHadleTimeInput(),3e4);const modal=$id("myModal"),closeModal=document.getElementsByClassName("close")[0];closeModal.onclick=(()=>{modal.style.display="none"});const setModalContent=e=>{const t=document.querySelector(".modal-content");t.removeChild(t.children[1]),t.insertAdjacentHTML("beforeend",e),modal.style.display="block"},statusAlarm=document.querySelector(".status-alarm"),statusAlarmSignal=e=>{statusAlarm.classList.remove("d-none"),"warning"===e?(statusAlarm.textContent="Внимание",statusAlarm.classList.remove("accident-signal"),statusAlarm.classList.add("warning-signal","blink"),document.querySelector(".warning-signal").classList.add("blink")):(statusAlarm.textContent="Авария",statusAlarm.classList.remove("warning-signal"),statusAlarm.classList.add("accident-signal","blink"),document.querySelector(".accident-signal").classList.add("blink"))},accidentModal=()=>{setModalContent('<p class="tac my-5">Произошло срабатывание сигнализации. <br/> Для просмотра более подробной информации нажмите на индикатор "Авария" в Главном окне</p>'),statusAlarmSignal("warning")},generalAlarm=()=>{setModalContent(' <div class="mt-4">\n  <h3 class="tac my-3">Общая сигнализация</h3>\n    <div class="row card">\n      <h4 class="mb-3 tac">События</h4>\n      <div class="row card flex-row">\n        <div class="col-4 mt-2 me-4">\n          <div > <input type="checkbox" name="" id="">  Собственное время отключения </div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Полное время отключения</div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Собственное время включения</div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Время включения </div>\n        </div>\n        <div class="col mt-2 ms-2">\n          <div > <input type="checkbox" name="" id=""> Невыполненная команда на соленоид отключения 1</div>\n          <div class="mt-1"> <input type="checkbox" name="" id=""> Невыполненная команда на соленоид отключения 2</div>\n          <div class="mt-1"> <input type="checkbox" name="" id=""> Невыполненная команда на соленоид включения</div>\n        </div>\n      </div>\n      <div class="row mt-2">\n        <div class="col card">\n          <h4 class="mb-2">Колличество операций</h4>\n          <div> <input type="checkbox" name="" id="">  Внимание </div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Авария</div>\n        </div>\n        <div class="col-4 card ms-2">\n          <h4 class="mb-2">Неполнофазный режим работы</h4>\n          <div> <input type="checkbox" name="" id="">  Авария</div>\n        </div>\n        <div class="col ">\n          <div class="tac"> <button class="mt-4 ">  Сброс сигналов событий</button></div>\n        </div>\n      </div>\n    </div>\n      <h3 class="tac my-3">Cигнализация измерений</h3>\n      <div class="row card flex-row mt-2 justify-content-evenly">\n        <div class="col card">\n          <h3 class="mb-2 tac">Фаза А</h3>\n          <div class="row">\n            <h4 class="my-3">Износ контактов </h4>\n          </div>\n          <div class="row">\n            <div class="col"> <input type="checkbox" name="" id="">Внимание </div>\n            <div class="col"> <input type="checkbox" name="" id="">Авария</div>\n          </div>\n          <hr class="mt-3">\n          <h4 class="my-3">События </h4>\n          <div > <input type="checkbox" name="" id="">Время горения дуги</div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">Повторное зажигание дуги</div>\n        </div>\n      <div class="col card mx-2">\n        <h3 class="mb-2 tac">Фаза B</h3>\n        <div class="row">\n          <h4 class="my-3">Износ контактов </h4>\n        </div>\n        <div class="row">\n          <div class="col"> <input type="checkbox" name="" id="">Внимание </div>\n          <div class="col"> <input type="checkbox" name="" id="">Авария</div>\n        </div>\n        <hr class="mt-3">\n        <h4 class="my-3">События </h4>\n        <div > <input type="checkbox" name="" id="">Время горения дуги</div>\n        <div class="mt-1"> <input type="checkbox" name="" id="">Повторное зажигание дуги</div>\n      </div>\n      <div class="col card">\n        <h3 class="mb-2 tac">Фаза C</h3>\n        <div class="row">\n          <h4 class="my-3">Износ контактов </h4>\n        </div>\n        <div class="row">\n          <div class="col"> <input type="checkbox" name="" id="">Внимание </div>\n          <div class="col"> <input type="checkbox" name="" id="">Авария</div>\n        </div>\n        <hr class="mt-3">\n        <h4 class="my-3">События </h4>\n        <div > <input type="checkbox" name="" id="">Время горения дуги</div>\n        <div class="mt-1"> <input type="checkbox" name="" id="">Повторное зажигание дуги</div>\n      </div>\n    </div>\n  </div>\n  '),statusAlarmSignal("accident")},selfDiagnosisAlarm=()=>{setModalContent('<div class="mt-4">\n    <div class="row justify-content-center card">\n      <div class="col ms-5">\n        <div><input type="checkbox" name="" id="">Неисправность внутренней FLASH-памяти</div>\n        <div class="mt-2 "><input type="checkbox" name="" id="">Неисправность внутренней SRAM-памяти</div>\n        <div class="mt-2"><input type="checkbox" name="" id="">Неисправность АЦП</div>\n        <div class="mt-2"><input type="checkbox" name="" id="">Ошибка считывания FRAM (энергозависимых данных). Приняты данные по умолчанию</div>\n        </div>\n      </div>\n    </div>\n    </div>'),document.querySelector(".self-diagnosis-signal").classList.add("blink")};$id("statusAlarm").addEventListener("click",()=>statusAlarmSignal()),$id("accidentAlarm").addEventListener("click",()=>(setModalContent('<p class="tac my-5">Произошло срабатывание сигнализации. <br/> Для просмотра более подробной информации нажмите на индикатор "Авария" в Главном окне</p>'),void statusAlarmSignal("warning"))),$id("generalAlarm").addEventListener("click",()=>(setModalContent(' <div class="mt-4">\n  <h3 class="tac my-3">Общая сигнализация</h3>\n    <div class="row card">\n      <h4 class="mb-3 tac">События</h4>\n      <div class="row card flex-row">\n        <div class="col-4 mt-2 me-4">\n          <div > <input type="checkbox" name="" id="">  Собственное время отключения </div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Полное время отключения</div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Собственное время включения</div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Время включения </div>\n        </div>\n        <div class="col mt-2 ms-2">\n          <div > <input type="checkbox" name="" id=""> Невыполненная команда на соленоид отключения 1</div>\n          <div class="mt-1"> <input type="checkbox" name="" id=""> Невыполненная команда на соленоид отключения 2</div>\n          <div class="mt-1"> <input type="checkbox" name="" id=""> Невыполненная команда на соленоид включения</div>\n        </div>\n      </div>\n      <div class="row mt-2">\n        <div class="col card">\n          <h4 class="mb-2">Колличество операций</h4>\n          <div> <input type="checkbox" name="" id="">  Внимание </div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">  Авария</div>\n        </div>\n        <div class="col-4 card ms-2">\n          <h4 class="mb-2">Неполнофазный режим работы</h4>\n          <div> <input type="checkbox" name="" id="">  Авария</div>\n        </div>\n        <div class="col ">\n          <div class="tac"> <button class="mt-4 ">  Сброс сигналов событий</button></div>\n        </div>\n      </div>\n    </div>\n      <h3 class="tac my-3">Cигнализация измерений</h3>\n      <div class="row card flex-row mt-2 justify-content-evenly">\n        <div class="col card">\n          <h3 class="mb-2 tac">Фаза А</h3>\n          <div class="row">\n            <h4 class="my-3">Износ контактов </h4>\n          </div>\n          <div class="row">\n            <div class="col"> <input type="checkbox" name="" id="">Внимание </div>\n            <div class="col"> <input type="checkbox" name="" id="">Авария</div>\n          </div>\n          <hr class="mt-3">\n          <h4 class="my-3">События </h4>\n          <div > <input type="checkbox" name="" id="">Время горения дуги</div>\n          <div class="mt-1"> <input type="checkbox" name="" id="">Повторное зажигание дуги</div>\n        </div>\n      <div class="col card mx-2">\n        <h3 class="mb-2 tac">Фаза B</h3>\n        <div class="row">\n          <h4 class="my-3">Износ контактов </h4>\n        </div>\n        <div class="row">\n          <div class="col"> <input type="checkbox" name="" id="">Внимание </div>\n          <div class="col"> <input type="checkbox" name="" id="">Авария</div>\n        </div>\n        <hr class="mt-3">\n        <h4 class="my-3">События </h4>\n        <div > <input type="checkbox" name="" id="">Время горения дуги</div>\n        <div class="mt-1"> <input type="checkbox" name="" id="">Повторное зажигание дуги</div>\n      </div>\n      <div class="col card">\n        <h3 class="mb-2 tac">Фаза C</h3>\n        <div class="row">\n          <h4 class="my-3">Износ контактов </h4>\n        </div>\n        <div class="row">\n          <div class="col"> <input type="checkbox" name="" id="">Внимание </div>\n          <div class="col"> <input type="checkbox" name="" id="">Авария</div>\n        </div>\n        <hr class="mt-3">\n        <h4 class="my-3">События </h4>\n        <div > <input type="checkbox" name="" id="">Время горения дуги</div>\n        <div class="mt-1"> <input type="checkbox" name="" id="">Повторное зажигание дуги</div>\n      </div>\n    </div>\n  </div>\n  '),void statusAlarmSignal("accident"))),$id("selfDiagnosislAlarm").addEventListener("click",()=>(setModalContent('<div class="mt-4">\n    <div class="row justify-content-center card">\n      <div class="col ms-5">\n        <div><input type="checkbox" name="" id="">Неисправность внутренней FLASH-памяти</div>\n        <div class="mt-2 "><input type="checkbox" name="" id="">Неисправность внутренней SRAM-памяти</div>\n        <div class="mt-2"><input type="checkbox" name="" id="">Неисправность АЦП</div>\n        <div class="mt-2"><input type="checkbox" name="" id="">Ошибка считывания FRAM (энергозависимых данных). Приняты данные по умолчанию</div>\n        </div>\n      </div>\n    </div>\n    </div>'),void document.querySelector(".self-diagnosis-signal").classList.add("blink")));const serviceModal=()=>{const e=$id("serviceModalContent");e.style.display="block",$id("serviceClose").addEventListener("click",()=>{e.style.display="none"})};$id("serviceModal").addEventListener("click",()=>serviceModal());const resetEventsJournal=$id("0x100"),resetMeassurmentsJournal=$id("0x101"),resetOscillogramms=$id("0x102"),resetAccumulatedMeasurements=$id("0x103"),setDefaultcnf=$id("0x104"),calibrationFor1000=$id("0x10A"),calibrationFor10000=$id("0x10B"),setAlarm=$id("0x10C"),resetAlarm=$id("0x10D"),setPhaseAWear=$id("0x105"),setPhaseBWear=$id("0x106"),setPhaseCWear=$id("0x107"),setNumberOfTurns=$id("0x108"),setNumberOfShutdowns=$id("0x109"),comandBtns=[resetEventsJournal,resetMeassurmentsJournal,resetOscillogramms,setDefaultcnf,resetAccumulatedMeasurements,calibrationFor1000,calibrationFor10000,setAlarm,resetAlarm],comandBtnsWithArg=[setPhaseAWear,setPhaseBWear,setPhaseCWear,setNumberOfTurns,setNumberOfShutdowns],$DataId=e=>document.querySelectorAll(`[data-id='${e}']`),isEmpty=e=>!Object.values(e).some(e=>null!==e&&""!==e),ab2str=e=>String.fromCharCode.apply(null,new Uint16Array(e)),str2ab=e=>{let t=new ArrayBuffer(2*e.length),s=new Uint16Array(t);for(let t=0,a=e.length;t<a;t++)s[t]=e.charCodeAt(t);return t},ab2int=e=>32767&[].reduce.call(e,(e,t)=>(e<<8)+t,0);let $0001_0002=[],$411_412=[],$463_464=[],$465_466=[],$474_475=[],$477_478=[],view477478=new DataView(new ArrayBuffer(4)),firmwareStr="",oscilloNumSum=0;function dbg_out(e){console.log(e)}const socket=new WebSocket("ws://127.0.0.1:8080",76);function send(e,t,s){let a=new Uint16Array(64);a[0]=e,a[1]=t,a[2]=s,socket&&1===socket.readyState&&socket.send(a)}const sendCommand=e=>{const t=e.target.id;console.log("code ",t),send(1,551,t),send(1,550,t)},sendCommandWithArg=e=>{const t=e.target.id,s=document.querySelector(`[data-id='${t}']`).value;console.log("code arg",t),console.log("val arg",s),send(1,551,t),send(1,550,s)};comandBtns.forEach(e=>e.addEventListener("click",e=>sendCommand(e))),comandBtnsWithArg.forEach(e=>e.addEventListener("click",e=>sendCommandWithArg(e)));let upload_pointer=0,firmware_array=0;const regArrayToSetValuesInSpan=["10","11","12","0000","0001","0002","0003","0010","0011","0012","0013","0014","0015","0109","0110","0012","0014","0016","0251","0252","0253","0254","0255","0256","0257","0258","0260","0261","0262","0263","0264","0265","0266","0267","414","415"],regArrayToSetValuesInSpanDataId=["0200","0300","0600-0601"],regArrayToSetValuesInInput=[410,411,413,432,433,434,435,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,467,468,471,473,476],regArrayToSetValuesFromBuff=["0001","0002",411,412,463,464,465,466,474,475,477,478],regToFirmwareArray=[484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519],regArrayToSetValuesIfElse=["0111","0259"],phasesCoefficent=["0113","0115","0117"],measurementsJournal=["0201","0204","0206","0207","0208","0209","0210","0211","0212","0213","0214","0215","0216","0217","0218","0219","0220","0221","0222","0223","0224","0225","0226","0227","0228"],eventsJournal=["0301","0303","0304","0305","0306","0307","0308","0309","0310","0311"],oscilloPhaseASign=[1,5,9,13,17,21,25,29,33,37,41,45,49,53,57,61,65,69,73,77,81,85,89,93,97],oscilloPhaseCSign=[3,7,11,15,19,23,27,31,35,39,43,47,51,55,59,63,67,71,75,79,83,87,91,95,99],osciloCurrentInfo=["0602","0603","0605","0606","0607","0608","0609","0610","0611","0612"];function recv(e){const t=new FileReader;t.onload=(()=>{let e=new Uint16Array(t.result),s=e[1],a=e[2];if(console.log(s),regArrayToSetValuesInSpan.includes(`${s}`)&&($id(`${s}`).textContent=.01*a,$id(`${s}`).textContent=a),regArrayToSetValuesInSpanDataId.includes(`${s}`)&&[...$DataId(`${s}`)].forEach(e=>{e.textContent=a}),"0111"===s&&1===a&&($id(`${s}`).textContent="Включено"),"0111"===s&&2===a&&($id(`${s}`).textContent="Отключено"),phasesCoefficent.includes(`${s}`)&&($id(`${s}`).textContent=(.01*a).toFixed(2),"0113"===s&&markElemInDiagramm("#phaseDiagrammA",.01*a),"0115"===s&&markElemInDiagramm("#phaseDiagrammB",.01*a),"0117"===s&&markElemInDiagramm("#phaseDiagrammC",.01*a)),"0259"===s&&1===a&&($id(`${s}`).textContent="ВКЛ."),"0259"===s&&2===a&&($id(`${s}`).textContent="ОТКЛ."),eventsJournal.includes(s)&&(eventsTableCurrentObj[`${s}`]=a,isEmpty(eventsTableCurrentObj)||addCurrentEntryToEventsTable()),measurementsJournal.includes(s)&&(measurmentsTableCurrentObj[`${s}`]=a,isEmpty(measurmentsTableCurrentObj)||addCurrentEntryToEventsTable()),regArrayToSetValuesFromBuff.includes(s)&&("0001"===s&&($0001_0002[0]=a),"0002"===s&&($0001_0002[1]=a,$id("0001-0002").textContent=ab2int($0001_0002)),411===s&&($411_412[0]=a),412===s&&($411_412[1]=a,$id("411-412").value=ab2int($411_412)),463===s&&($463_464[0]=a),464===s&&($463_464[1]=a,$id("463-464").value=ab2int($463_464)),465===s&&($465_466[0]=a),466===s&&($465_466[1]=a,$id("465-466").value=ab2int($465_466)),474===s&&($474_475[0]=a),475===s&&($474_475[1]=a,$id("474-475").value=ab2int($474_475)),477===s&&($477_478[0]=a),478===s&&($477_478[1]=a,$id("477-478").value=ab2int($477_478))),regArrayToSetValuesInInput.includes(s)&&(a*=.001,s>=456&&s<=461&&(a*=.1),$id(`${s}`).value=a),472===s){let e=new Uint16Array(a);1===e[0]&&($id("472a").checked=!0),1===e[1]&&($id("472b").checked=!0),1===e[2]&&($id("472c").checked=!0)}regToFirmwareArray.includes(s)&&(firmwareStr+=a,$id("484-519").textContent=firmwareStr),"0600"!==s&&"0601"!==s||(oscilloNumSum+=a,$id("0600-0601").textContent=oscilloNumSum),osciloCurrentInfo.includes(s)&&osData.info.push({register:a}),s>=613&&s<=4616&&(oscilloPhaseASign.includes(Number(a.toString().slice(-2)))&&osData.a.values.push({x:osData.a.values.length,y:10*a}),s%2==0&&s%4!=0&&osData.b.values.push({x:osData.b.values.length,y:10*a}),oscilloPhaseCSign.includes(Number(a.toString().slice(-2)))&&osData.c.values.push({x:osData.c.values.length,y:10*a}),s%4==0&&osData.bk.values.push({x:osData.bk.values.length,y:a})),398===e[1]&&((upload_pointer=e[2]+(e[3]<<16))<65536?socket&&1===socket.readyState&&socket.send(firmware_array.subarray(upload_pointer,upload_pointer+512)):upload_pointer=0)}),t.readAsArrayBuffer(e)}function setDate(){send(0,10,0),send(0,11,0),send(0,12,0)}function read_file(e){const t=e.files[0],s=new FileReader;s.onload=(()=>{let e=new Uint8Array(s.result);new Uint8Array(65536).fill(255,0,65536).set(e);let a=new Uint8Array(512).fill(0,0,512);for(let e=0;e<t.name.length;e++)a[e]=t.name.charCodeAt(e);socket&&1===socket.readyState&&socket.send(a)}),s.readAsArrayBuffer(t)}socket.onopen=(e=>{regArrayToSetValuesInSpan.forEach(e=>send(0,e,0)),phasesCoefficent.forEach(e=>send(0,e,0)),regArrayToSetValuesIfElse.forEach(e=>send(0,e,0))}),socket.onmessage=(e=>{recv(e.data)}),socket.onclose=(e=>{e.wasClean?dbg_out("Соединение закрыто нормально"):dbg_out("Соединение закрыто экстренно")}),socket.onerror=(e=>{dbg_out("Ошибка соединения: "+e.message)}),$id("cnf").addEventListener("click",()=>{regArrayToSetValuesInInput.forEach(e=>send(0,e,0)),regToFirmwareArray.forEach(e=>send(0,e,0)),send(0,472,0)}),[...$DataId("oscillograms")].forEach(e=>{e.addEventListener("click",()=>{oscilloNumSum=0,send(0,"0600",0),send(0,"0601",0),osciloCurrentInfo.forEach(e=>send(0,e,0))})}),[...$DataId("events")].forEach(e=>{e.addEventListener("click",()=>{send(0,"0300",0),eventsJournal.forEach(e=>send(0,e,0))})}),[...$DataId("measurements")].forEach(e=>{e.addEventListener("click",()=>{send(0,"0200",0),measurementsJournal.forEach(e=>send(0,e,0))})}),$id("setDate").addEventListener("click",setDate),$id("file").addEventListener("change",()=>{read_file(this)});